name: CI flow for Amazon ECS3

on: [push]

env:
  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  AWS_REGION: ap-northeast-1
  ECS_WEBAPP_SERVICE: ecs-sample-webapp
  ECS_RESTAPI_SERVICE: ecs-sample-restapi
  WEBAPP_CONTAINER_NAME: ecs-sample-webapp
  BACKEND_CONTAINER_NAME: ecs-sample-backend
  RESTAPI_CONTAINER_NAME: ecs-sample-restapi
  WEBAPP_TAG: 1.0.0
  BACKEND_TAG: 1.0.0
  RESTAPI_TAG: 1.0.0

jobs:
  ci:
    name: ci
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Unit Test
      run: cd ${{ github.workspace }}
    - run: cd sample-webapp && npm install
    #&& npm run test:unit

    # TODO add tests for backend and rest-api


    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1


    - name: webapp push to ECR
      id: build-image-webapp
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: echo "情報取得：${{ steps.login-ecr.outputs.registry }}"
    - run: |
        ls -la
        echo "List of files: $(ls)"
    - run: |
        cd sample-webapp
        ls -la



    - name: Success
      uses: rtCamp/action-slack-notify@v2.0.2
      if: success()
      env:
        SLACK_TITLE: CI flow / Success
        SLACK_COLOR: good
        SLACK_MESSAGE: Message for Success

    - name: Failure
      uses: rtCamp/action-slack-notify@v2.0.2
      if: failure()
      env:
        SLACK_TITLE: CI flow / Failure
        SLACK_COLOR: danger
        SLACK_MESSAGE: Message for Failure

    - name: Cancel
      uses: rtCamp/action-slack-notify@v2.0.2
      if: cancelled()
      env:
        SLACK_TITLE: CI flow / Cancel
        SLACK_COLOR: danger
        SLACK_MESSAGE: Message for Cancel
